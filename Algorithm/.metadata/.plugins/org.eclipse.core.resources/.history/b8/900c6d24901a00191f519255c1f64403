package chapter01;

import java.io.IOException;
import java.util.Scanner;

//chapter01 : 카운팅 소트
public class CountingSort {
	int[] numbers;	//	입력된 숫자
	int[] countArr;	//	숫자세기
	int[] result; 	//	정렬된 후 숫자 저장
	int max = 0;
	
	void inputNumbers() throws IOException {//	숫자 입력하기
		Scanner sc = new Scanner(System.in);
		int size = sc.nextInt();	//	size 입력받기
		numbers = new int[size];	//	입력받은 size 만큼 배열 크기 생성
			
		//	배열 크기만큼 순회하며 num 입력 받기
		for(int i = 0; i< numbers.length; i ++) {
			int num = sc.nextInt();
			numbers[i] = num;
			if(max < num) {	//	최댓값 찾기
				max = num;
			}
		}
	}
	
	int findMaxNumber() {//	최댓값 찾기
		int max = 0;
//		배열 크기만큼 순회하며 numbers배열의 최댓값 찾기
		for(int i =0; i<numbers.length; i++) {
			if(max < numbers[i]) {
				max = numbers[i];
			}	
		}
		return max;
	}
	
	void display(int[] arr) {	//	배열 출력
		for(int i= 0; i<arr.length; i++) {
			System.out.println(arr[i]+" ");
		}
		System.out.println();
	}
 	
	void sort() throws IOException {
		inputNumbers();
		int maxNumber = max;
		countArr = new int[maxNumber +1]; // 0-maxNumber+1만큼 생성
		result = new int[numbers.length];
		
		for(int i =0; i<numbers.length; i++) {
			//	해당하는 숫자 카운터
			countArr[numbers[i]]++;
		}
		//System.out.println("CountArr[]=");
        //display();

		for(int i = 1; i < countArr.length; i ++) {
			//	누적 숫자 더하기
			countArr[i] += countArr[i-1];
		}
		//System.out.println("누적 배열");
        //display();

		for(int i = numbers.length - 1; i>=0; i--) {
			//	정렬하기
			result[--countArr[numbers[i]]] = numbers[i];
			//countArr[numbers[i]]--;
		}
		display(result);
	
}
	public static void main(String[] args) throws IOException {
		new CountingSort().sort();

	}
	}

